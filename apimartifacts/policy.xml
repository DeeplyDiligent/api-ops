<!--
    IMPORTANT:
    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.
    - Only the <forward-request> policy element can appear within the <backend> section element.
    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.
    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.
    - To add a policy position the cursor at the desired insertion point and click on the round button associated with the policy.
    - To remove a policy, delete the corresponding policy statement from the policy document.
    - Policies are applied in the order of their appearance, from the top down.
-->

<!-- Query: when the parameter size is small, medium or large write the policy to change it to S, M or L else pass through the original parameter value-->
<!-- Rate lmit the requests to 5 per seond  -->

<policies>
    <inbound>
        <rate-limit-by-key calls="5" renewal-period="60" counter-key="@(context.Request.IpAddress)" />
        <choose>
            <when condition='@(context.Request.Url.Query.GetValueOrDefault("size", "").ToLower() == "small")'>
                <set-query-parameter name="size" exists-action="override">
                    <value> S </value>
                </set-query-parameter>
            </when>
            <when condition='@(context.Request.Url.Query.GetValueOrDefault("size", "").ToLower() == "medium")'>
                <set-query-parameter name="size" exists-action="override">
                    <value> M </value>
                </set-query-parameter>
            </when>
            <when condition='@(context.Request.Url.Query.GetValueOrDefault("size", "").ToLower() == "large")'>
                <set-query-parameter name="size" exists-action="override">
                    <value> L </value>
                </set-query-parameter>
            </when>
            <otherwise>
                <set-query-parameter name="size" exists-action="override">
                    <value>@(context.Request.Url.Query.GetValueOrDefault("size", ""))</value>
                </set-query-parameter>
            </otherwise>
        </choose>
    </inbound>
    <backend>
    </backend>
    <outbound />
</policies>